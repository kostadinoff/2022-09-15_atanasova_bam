#| include: false
#| warning: false
knitr::opts_chunk$set(dev = "cairo_pdf")
ggplot2::theme_set(
ggthemes::theme_tufte(
base_size = 13,
base_family = "Cormorant Infant",
ticks = FALSE))
dat = read_rds(here::here("2022-09-15_atanasova_bam", "data", "dat.rds"))
dat_all = read_rds(here::here("2022-09-15_atanasova_bam", "data", "all_patients.rds"))
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
#| label: dinamics
#| fig-cap: "По хоризонтала - времето (седмици), с черна линия - 14- дневен среден брой (moving averages) на хоспитализираните случаи, с червена линия - 14- дневен среден брой (moving averages) на починалите, със синя линия- болничния леталитет на седмична база"
#| warning: false
#| echo: false
#| column: page-right
# скалиращ фактор за наличие на две у оси
scaleFactor <- 25 / 76.47059
# подготовка на данни
dat_all %>%
count(admit_day, outocome) %>%
pivot_wider(names_from = outocome, values_from = n) %>%
select(-`NA`) %>%
mutate(total = `За домашно лечение` + `Починал`,
dplyr::across(where(is.numeric), ~ replace(., is.na(.), 0))) %>%
rename(deaths = `Починал`) %>%
select(-`За домашно лечение`) %>%
# хитра функция с групиране по седмици и месеци и нова колона от средните
group_by(yw = paste(year(admit_day), week(admit_day))) %>%
mutate(case_fatality = mean(deaths / mean(total)) * 100) %>%
ungroup() %>%
# Плот
ggplot(aes(x = admit_day, group = 1)) +
# За Хоспитализирани
geom_line(
aes(y = total, group = 1),
alpha = 0.3,
size = 0.3,
lty = 2,
color = "black"
) +
geom_ma(
aes(y = total, group = 1),
ma_fun = SMA,
n = 14,
alpha = 1,
size = 0.8,
lty = 1,
color = "black"
) +
geom_point(
aes(y = total, group = 1),
alpha = 0.3,
size = 0.4,
color = "black"
) +
# За Починали
geom_line(
aes(y = deaths, group = 1),
size = 0.3,
alpha = 0.3,
colour = "red",
lty = 2
) +
geom_ma(
aes(y = deaths, group = 1),
ma_fun = SMA,
n = 14,
size = 0.8,
alpha = 1,
colour = "red",
lty = 1
) +
geom_point(
aes(y = deaths, group = 1),
alpha = 0.3,
size = 0.3,
colour = "red"
) +
# За Леталитета
geom_smooth(
aes(y = case_fatality * scaleFactor, group = 1),
se = F,
colour = "blue",
lty = 2,
size = 1
) +
# За двете оси
scale_y_continuous(name = "Брой (n)",
sec.axis = sec_axis( ~ . / scaleFactor, name = "Леталитет (%)")) +
theme(axis.text.x = element_text(
angle = 90,
vjust = 0.5,
hjust = 1
)) +
# Ръгчетата по х оста
ggthemes::geom_rangeframe(aes(x = admit_day, group = 1)) +
coord_cartesian(clip = "off") +
geom_rug(aes(x = admit_day),
alpha = 0.3,
size = 0.3 ,
sides = "b") +
scale_x_date(date_labels = "%b %y", date_breaks  = "1 month") +
labs(title = "Динамика в броя хоспитализациите,\nсмъртните случаи и леталитета",
x = "")
source("~/.active-rstudio-document", echo=TRUE)
#| include: false
fill_dat = dat %>%
freq_table(my, variant_type) %>%
select(-n) %>%
pivot_wider(names_from = variant_type, values_from = prop) %>%
select(my, Delta) %>%
mutate(Delta = replace_na(Delta, 0)) %>%
rename(delta_prob = Delta)
#| label: dinamics
#| fig-cap: "По хоризонтала - времето (седмици), с черна линия - 14- дневен среден брой (moving averages) на хоспитализираните случаи, с червена линия - 14- дневен среден брой (moving averages) на починалите, със синя линия- болничния леталитет на седмична база"
#| warning: false
#| echo: false
#| column: page-right
# скалиращ фактор за наличие на две у оси
scaleFactor <- 25 / 76.47059
# подготовка на данни
dat_all %>%
count(admit_day, outocome) %>%
pivot_wider(names_from = outocome, values_from = n) %>%
select(-`NA`) %>%
mutate(total = `За домашно лечение` + `Починал`,
dplyr::across(where(is.numeric), ~ replace(., is.na(.), 0))) %>%
rename(deaths = `Починал`) %>%
select(-`За домашно лечение`) %>%
# хитра функция с групиране по седмици и месеци и нова колона от средните
group_by(yw = paste(year(admit_day), week(admit_day))) %>%
mutate(case_fatality = mean(deaths / mean(total)) * 100) %>%
ungroup() %>%
# Плот
ggplot(aes(x = admit_day, group = 1)) +
# За Хоспитализирани
geom_line(
aes(y = total, group = 1),
alpha = 0.3,
size = 0.3,
lty = 2,
color = "black"
) +
geom_ma(
aes(y = total, group = 1),
ma_fun = SMA,
n = 14,
alpha = 1,
size = 0.8,
lty = 1,
color = "black"
) +
geom_point(
aes(y = total, group = 1),
alpha = 0.3,
size = 0.4,
color = "black"
) +
# За Починали
geom_line(
aes(y = deaths, group = 1),
size = 0.3,
alpha = 0.3,
colour = "red",
lty = 2
) +
geom_ma(
aes(y = deaths, group = 1),
ma_fun = SMA,
n = 14,
size = 0.8,
alpha = 1,
colour = "red",
lty = 1
) +
geom_point(
aes(y = deaths, group = 1),
alpha = 0.3,
size = 0.3,
colour = "red"
) +
# За Леталитета
geom_smooth(
aes(y = case_fatality * scaleFactor, group = 1),
se = F,
colour = "blue",
lty = 2,
size = 1
) +
# За двете оси
scale_y_continuous(name = "Брой (n)",
sec.axis = sec_axis(~ . / scaleFactor, name = "Леталитет (%)")) +
theme(axis.text.x = element_text(
angle = 90,
vjust = 0.5,
hjust = 1
)) +
# Ръгчетата по х оста
ggthemes::geom_rangeframe(aes(x = admit_day, group = 1)) +
coord_cartesian(clip = "off") +
geom_rug(aes(x = admit_day),
alpha = 0.3,
size = 0.3 ,
sides = "b") +
scale_x_date(date_labels = "%b %y", date_breaks  = "1 month") +
labs(title = "Динамика в броя хоспитализациите,\nсмъртните случаи и леталитета",
x = "")
#| include: false
fill_dat = dat %>%
freq_table(my, variant_type) %>%
select(-n) %>%
pivot_wider(names_from = variant_type, values_from = prop) %>%
select(my, Delta) %>%
mutate(Delta = replace_na(Delta, 0)) %>%
rename(delta_prob = Delta)
#| label: case_fatality
#| fig-cap: "Разпределение на леталитета по месеци и спрямо разпространението на делта ваиранта. Вътреболничния леталитет е изчислен като са разделени броя на починалите към броя на хоспитализираните в съответния месец. Леталитетът е представен в проценти. В случая става върпрос за *crude* или нестандартиризиран леталитет"
#| warning: false
#| echo: false
#| cap-location: margin
dat_all %>%
count(my, outocome) %>%
pivot_wider(names_from = outocome, values_from = n) %>%
select(-`NA`) %>%
mutate(total = `За домашно лечение` + `Починал`,
across(where(is.numeric), ~ replace(., is.na(.), 0))) %>%
rename(deaths = `Починал`) %>%
select(-`За домашно лечение`) %>%
mutate(case_fatality = (deaths / total),
across(where(is.numeric), ~ replace(., is.na(.), 0))) %>%
left_join(fill_dat) %>%
ggplot(aes(case_fatality, my, fill = delta_prob)) +
geom_col() +
scale_fill_gradient(low = "#008F7A",
high = "#845EC2",
na.value = NA) +
geom_vline(
xintercept = 0.253,
lty = 2,
size = 0.8,
alpha = 1.1
) +
scale_x_continuous(labels = scales::percent) +
#ggthemes::geom_rangeframe() +
#geom_rug(alpha = 0.6,sides="r")+
labs(title = "Разпределние на вътреболничния леталитет",
x = "Вътреболничен леталитет",
y = "",
fill = "% Делта вариант")
#| include: false
delta_rate = dat %>%
freq_table(my, variant_type) %>%
select(-prop) %>%
pivot_wider(names_from = variant_type, values_from = n) %>%
select(my, Delta) %>%
mutate(Delta = replace_na(Delta, 0),
delta_rate = (Delta - lag(Delta)) / lag(Delta)) %>%
select(-Delta)
#| label: case_fatality_dynamics
#| fig-cap: "Верижния индекс на болничния леталитет е конструиран, като за всеки месец е изчислена разликата в броя на починалите спрямо предходния, разделяна на броя на хоспитализираните в предходния месец"
#| warning: false
#| echo: false
#| cap-location: margin
dat_all %>%
count(my, outocome) %>%
pivot_wider(names_from = outocome, values_from = n) %>%
select(-`NA`) %>%
mutate(total = `За домашно лечение` + `Починал`,
across(where(is.numeric), ~replace(., is.na(.), 0))) %>%
rename(deaths = `Починал`) %>%
select(- `За домашно лечение`) %>%
mutate(rate = (deaths-lag(deaths))/lag(total),
my = as_factor(my)) %>%
ggplot(aes(rate, my)) +
geom_col()+
geom_vline(xintercept = 0, lty=1, size = 1,1, alpha = 1.1)+
scale_x_continuous(labels = scales::percent)+
#ggthemes::geom_rangeframe() +
coord_cartesian(clip="off") +
#geom_rug(alpha = 0.6,sides="r")+
labs(title = "Индекс болничния леталитет",
x = "Индекс (%)",
y = "")
#| label: case_fatality_dynamics
#| fig-cap: "Верижния индекс на болничния леталитет е конструиран, като за всеки месец е изчислена разликата в броя на починалите спрямо предходния, разделяна на броя на хоспитализираните в предходния месец"
#| warning: false
#| echo: false
#| cap-location: margin
dat_all %>%
count(my, outocome) %>%
pivot_wider(names_from = outocome, values_from = n) %>%
select(-`NA`) %>%
mutate(total = `За домашно лечение` + `Починал`,
across(where(is.numeric), ~replace(., is.na(.), 0))) %>%
rename(deaths = `Починал`) %>%
select(- `За домашно лечение`) %>%
mutate(rate = (deaths-lag(deaths))/lag(total),
my = as_factor(my)) %>%
ggplot(aes(rate, my)) +
geom_col()+
geom_vline(xintercept = 0, lty=1, size = 1,1, alpha = 1.1)+
scale_x_continuous(labels = scales::percent)+
#ggthemes::geom_rangeframe() +
coord_cartesian(clip="off") +
#geom_rug(alpha = 0.6,sides="r")+
labs(title = "Индекс болничния леталитет",
x = "Индекс (%)",
y = "")
#| include: false
results_data = corr_test(dat_all,days_hospital, age, type = "parametric")
#| label: lengh_of_stay
#| fig-cap: "Скатър плот - разпределение на пациентите по възраст и продължителност на хоспитализацията"
#| warning: false
#| echo: false
#| cap-location: margin
dat_all %>%
ggplot(aes(age, days_hospital)) +
geom_jitter(size = 0.3,
aplha = 0.8,
color = "gray") +
geom_rug(alpha = 0.2,
size = 0.1,
position = "jitter") +
geom_smooth(
method = lm,
lty = 1,
size = 1,
color = "black",
alpha = 1.5,
se = FALSE
) +
labs(
title = "Връзка между възрастта на пациентите \nи времето за хоспитализация",
subtitle = parse(text = results_data$expression),
x = "Възраст",
y = "Период на хоспитализация"
) +
theme(plot.subtitle = element_text(size = 12))
#| include: false
mod <- lm(age ~ variant_type, data = dat)
variant_age <-
dat %>%
filter(variant_type != "Alpha") %>%
two_sample_test(variant_type,
age,
paired = FALSE,
type = "np")
#| tbl-cap: "Разлика във възрастта на пациентите по варианти"
#| column: margin
#| echo: false
#| warning: false
dat %>%
emmeans_test(age ~ variant_type) %>%
as_tibble() %>%
select(group1, group2, statistic, p.adj) %>%
rename(
`Вариант ` =  group1,
`Вариант` = group2,
`Разлика` = statistic,
`p` = p.adj
) %>%
round_df(2) %>%
gt()
#| label: age_by_variant
#| fig-cap: "Възрастово разпределение по вариант и пол. Поради малкия брой на наблюдение, вариант алфа не е включен в анализа."
#| warning: false
#| echo: false
#| cap-location: margin
dat %>%
filter(variant_type != "Alpha") %>%
ggplot(aes(age, variant_type, fill = sex)) +
geom_boxplot() +
ggthemes::geom_rangeframe() +
coord_cartesian(clip = "off") +
geom_rug(alpha = 0.6, sides = "b") +
theme(legend.position = "none") +
scale_fill_nejm() +
labs(
title = "Възрастово разпределение по вариант и пол",
subtitle = parse(text = variant_age$expression),
x = "Възраст",
y = " "
)
#| include: false
results_data_sex = dat %>%
contingency_table(sex, code)
#| label: sex_by_variant
#| fig-cap: "Полово разпределение по вариант. В синьо - относителния дял на мъжете, в червено - относителния дял на жените"
#| warning: false
#| echo: false
#| cap-location: margin
dat %>%
freq_table(code, sex) %>%
select(code, sex , prop) %>%
mutate(prop = prop / 100) %>%
ggplot(aes(prop, code, fill = sex)) +
geom_col() +
geom_vline(xintercept = 0.5,
size = 1.1,
alpha = 0.8) +
scale_x_continuous(labels = scales::percent) +
ggthemes::geom_rangeframe() +
#coord_cartesian(clip="off") +
#geom_rug(alpha = 0.6,sides="b")+
theme(legend.position = "none") +
scale_fill_nejm() +
labs(
title = "Полово разпределение по вариант",
subtitle = parse(text = results_data_sex$expression),
x = " ",
y = " "
)
#| include: false
c_table = dat %>%
contingency_table(code, outocome)
#| label: deaths_proportion
#| fig-cap: "Относителен дял на смъртните случаи по вариантии "
#| column: margin
#| message: false
#| echo: false
dat %>%
freq_table(code, outocome) %>%
filter(outocome == "Починал") %>%
select(code, prop) %>%
mutate(prop = prop / 100,
code = fct_reorder(code, prop)) %>%
ggplot(aes(prop, code, fill = code)) +
geom_col() +
theme(legend.position = "none") +
scale_fill_nejm() +
scale_x_continuous(labels = scales::percent) +
labs(x = "% смъртни случай",
y = " ")
#| include: false
results_days <- oneway_anova(dat,
code,
days_hospital,
paired = FALSE,
type = "np")
#| label: lengh_of_stay_by_variant
#| fig-cap: "Продължителност на болничния престой според варианта"
#| warning: false
#| echo: false
#| cap-location: margin
dat %>%
ggplot(aes(days_hospital, code), fill = "gray") +
geom_boxplot() +
ggthemes::geom_rangeframe() +
coord_cartesian(clip = "off") +
geom_rug(alpha = 0.6, sides = "b") +
theme(legend.position = "none") +
labs(
title = "Продължителност на болничния престой според варианта",
subtitle = parse(text = results_days$expression),
x = "Продължителност на болничния престой",
y = " "
)
#| label: lengh_of_stay_by_variant
#| fig-cap: "Продължителност на болничния престой според варианта"
#| warning: false
#| echo: false
#| cap-location: margin
dat %>%
ggplot(aes(days_hospital, code), fill = "gray") +
geom_boxplot() +
ggthemes::geom_rangeframe() +
coord_cartesian(clip = "off") +
geom_rug(alpha = 0.6, sides = "b") +
theme(legend.position = "none") +
labs(
title = "Продължителност на болничния престой според варианта",
subtitle = parse(text = results_days$expression),
x = "Продължителност на болничния престой",
y = " "
)
#| include: false
results_deaths <-
dat %>%
filter(variant_type != "Alpha",
days_to_death < 100) %>%
two_sample_test(variant_type,
days_to_death,
paired = FALSE,
type = "np")
#| label: deaths_days_by_variant
#| fig-cap: "Време до настъпване на смърта при починалите според варианта"
#| warning: false
#| echo: false
#| cap-location: margin
dat %>%
filter(variant_type != "Alpha",
days_to_death < 100) %>%
ggplot(aes(days_to_death, variant_type), fill = "gray") +
geom_boxplot() +
ggthemes::geom_rangeframe() +
coord_cartesian(clip = "off") +
geom_rug(alpha = 0.6, sides = "b") +
theme(legend.position = "none") +
labs(
title = "Време до настъпване на смърта при починалите",
subtitle = parse(text = results_deaths$expression),
x = "Продължителност на болничния престой",
y = " "
)
