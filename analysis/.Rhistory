theme(plot.subtitle = element_text(size = 14))
# Chunk 12
#| include: false
delta_rate = dat %>%
freq_table(my, variant_type) %>%
select(-prop) %>%
pivot_wider(names_from = variant_type, values_from = n) %>%
select(my, Delta) %>%
mutate(Delta = replace_na(Delta, 0),
delta_rate = (Delta - lag(Delta)) / lag(Delta)) %>%
select(-Delta)
# Chunk 13: case_fatality_dynamics
#| label: case_fatality_dynamics
#| fig-cap: "Верижния индекс на болничния леталитет е конструиран, като за всеки месец е изчислена разликата в броя на починалите спрямо предходния, разделяна на броя на хоспитализираните в предходния месец"
#| warning: false
#| echo: false
#| cap-location: margin
dat_all %>%
count(my, outocome) %>%
pivot_wider(names_from = outocome, values_from = n) %>%
select(-`NA`) %>%
mutate(total = `За домашно лечение` + `Починал`,
across(where(is.numeric), ~replace(., is.na(.), 0))) %>%
rename(deaths = `Починал`) %>%
select(- `За домашно лечение`) %>%
mutate(rate = (deaths-lag(deaths))/lag(total),
my = as_factor(my)) %>%
ggplot(aes(rate, my)) +
geom_col()+
geom_vline(xintercept = 0, lty=1, size = 1,1, alpha = 1.1)+
scale_x_continuous(labels = scales::percent)+
#ggthemes::geom_rangeframe() +
coord_cartesian(clip="off") +
#geom_rug(alpha = 0.6,sides="r")+
labs(title = "Индекс болничния леталитет",
x = "Индекс (%)",
y = "")
# Chunk 14
#| include: false
dat_all = dat_all %>%
mutate(
# Create categories
age_group = dplyr::case_when(
age <= 14            ~ "0-14",
age > 14 & age <= 44 ~ "15-44",
age > 44 & age <= 64 ~ "45-64",
age > 64             ~ "> 64"
),
# Convert to factor
age_group = factor(age_group,
level = c("0-14", "15-44", "45-64", "> 64"))
) %>%
mutate(death = as_factor(if_else(outocome == "Починал", 1, 0)))
death_mod = glm(death ~ age * factor(sex),
family = binomial(link = "logit"),
data = dat_all)
dat_all_mod = augment_columns(death_mod,
dat_all,
type.predict = "response")
# Chunk 15: tbl-death_age_sex
#| tbl-cap: "Разпределние на починалите по възрастови групи и пол"
#| cap-location: margin
#| label: tbl-death_age_sex
#| echo: false
#| warning: false
dat_all %>%
count(age_group, sex, outocome) %>%
pivot_wider(names_from = outocome,
values_from = n) %>%
select(-`NA`) %>%
mutate(case_fatality = percent(Починал / (`За домашно лечение` + Починал))) %>%
select(age_group, sex, case_fatality) %>%
left_join(
dat_all %>%
count(age_group, sex) %>%
pivot_wider(values_from = n, names_from = sex) %>%
mutate(
proportion_f = percent(Жена / sum(Жена)),
proportion_m = percent(Мъж / sum(Мъж))
) %>%
pivot_longer(
cols = 4:5,
names_to = "gender",
values_to = "% от всички"
) %>%
select(-c(Жена, Мъж)) %>%
mutate(sex = if_else(str_detect(gender, "_f"), "Жена", "Мъж")) %>%
select(age_group, sex, "% от всички")
) %>%
rename(`Възрастова група` = age_group,
`Пол` = sex,
`Леталитет` = case_fatality) %>%
knitr::kable()
# Chunk 16: case_fatality by sex and age
#| label: case_fatality by sex and age
#| fig-cap:  Вътреболничен леталитет спрямо пола и вързрастта. С розово- динамиката леталитета спрямо възрастта при жените, в синьо - при мъжете "
#| warning: false
#| echo: false
#| cap-location: margin
dat_all_mod  %>%
rename(predicted = .fitted) %>%
mutate(lower = predicted - 1.96 * .se.fit,
upper = predicted + 1.96 * .se.fit) %>%
ggplot(aes(age, predicted)) +
geom_line(aes (group = sex, color = sex),
size = 1,
alpha = 0.8) +
geom_ribbon(aes(group = sex,
fill = sex,
ymin = lower,
ymax = upper), alpha = 0.3) +
ggthemes::geom_rangeframe() +
coord_cartesian(clip = "off") +
geom_rug(aes(x = age), alpha = 0.2, size = 0.4) +
scale_y_continuous(labels = scales::percent) +
theme(legend.position = "none")+
labs(title = "Леталитет спрямо възрастта и пола",
x = "Възраст",
y = "Вътреболничен леталитет")
# Chunk 17
#| include: false
results_data = corr_test(dat_all,days_hospital, age, type = "parametric")
# Chunk 18: lengh_of_stay
#| label: lengh_of_stay
#| fig-cap: "Скатър плот - разпределение на пациентите по възраст и продължителност на хоспитализацията"
#| warning: false
#| echo: false
#| cap-location: margin
dat_all %>%
ggplot(aes(age, days_hospital)) +
geom_jitter(size = 0.3,
aplha = 0.8,
color = "gray") +
geom_rug(alpha = 0.2,
size = 0.1,
position = "jitter") +
geom_smooth(
method = lm,
lty = 1,
size = 1,
color = "black",
alpha = 1.5,
se = FALSE
) +
labs(
title = "Връзка между възрастта на пациентите \nи времето за хоспитализация",
subtitle = parse(text = results_data$expression),
x = "Възраст",
y = "Болничен престой"
) +
theme(plot.subtitle = element_text(size = 12))
# Chunk 19
#| include: false
dat_all = dat_all %>%
mutate(death = if_else(outocome == "Починал",1,0),
variant_dominant = if_else(admit_day > '2022-01-16', "Omicron", "Delta"),
variant_change = if_else(admit_day > '2022-01-16', 0, 1))
#| tbl-cap: "Разлики в основните изучавани характеристики в зависимост от доминиращия вариант"
#| cap-location: margin
#| column: page-right
#| tbl-colwidths: [30,25,25,20]
#| label: tbl-dominant
#| echo: false
#| warning: false
dat_all %>%
mutate("Пол - Мъже" = if_else(sex == "Мъж", 1,0),
"Леталитет" = if_else(outocome == "Починал",1,0)) %>%
select(age,"Пол - Мъже", days_hospital,days_to_death, variant_dominant,"Леталитет") %>%
tbl_summary(by = variant_dominant,
label = list(age~ "Възраст",
days_hospital ~ "Продължителност на хоспитализацията",
days_to_death ~ "Време (дни) до смърт"),
missing = "no") %>%
add_p() %>%
as_gt()
as_kable()
dat_all %>%
mutate("Пол - Мъже" = if_else(sex == "Мъж", 1,0),
"Леталитет" = if_else(outocome == "Починал",1,0)) %>%
select(age,"Пол - Мъже", days_hospital,days_to_death, variant_dominant,"Леталитет") %>%
tbl_summary(by = variant_dominant,
label = list(age~ "Възраст",
days_hospital ~ "Продължителност на хоспитализацията",
days_to_death ~ "Време (дни) до смърт"),
missing = "no") %>%
add_p() %>%
as_gt()
?tbl_summary
#| label: dinamics
#| fig-cap: "По хоризонтала - времето (седмици), с черна линия - 14- дневен среден брой (moving averages) на хоспитализираните случаи, с червена линия - 14- дневен среден брой (moving averages) на починалите, със синя линия- болничния леталитет на седмична база"
#| warning: false
#| echo: false
#| column: page-right
#| fig-width: 7
#| fig-height: 4
# скалиращ фактор за наличие на две у оси
scaleFactor <- 25 / 76.47059
# подготовка на данни
dat_all %>%
count(admit_day, outocome) %>%
pivot_wider(names_from = outocome, values_from = n) %>%
select(-`NA`) %>%
mutate(total = `За домашно лечение` + `Починал`,
dplyr::across(where(is.numeric), ~ replace(., is.na(.), 0))) %>%
rename(deaths = `Починал`) %>%
select(-`За домашно лечение`) %>%
# хитра функция с групиране по седмици и месеци и нова колона от средните
group_by(yw = paste(year(admit_day), week(admit_day))) %>%
mutate(case_fatality = mean(deaths / mean(total)) * 100) %>%
ungroup() %>%
# Плот
ggplot(aes(x = admit_day, group = 1)) +
# За Хоспитализирани
geom_line(
aes(y = total, group = 1),
alpha = 0.8,
size = 0.6,
lty = 2,
color = "black"
) +
#geom_ma(
#  aes(y = total, group = 1),
#  ma_fun = SMA,
#  n = 14,
#  alpha = 1,
#  size = 0.6,
#  lty = 1,
#  color = "black"
#) +
geom_point(
aes(y = total, group = 1),
alpha = 0.4,
size = 0.2,
color = "black"
) +
# За Починали
geom_line(
aes(y = deaths, group = 1),
alpha = 1,
size = 0.9,
colour = "#FF5733",
lty = 1
) +
#geom_ma(
#  aes(y = deaths, group = 1),
#  ma_fun = SMA,
# n = 14,
# alpha = 1,
# size = 0.6,
# colour = "red",
#  lty = 1
#) +
geom_point(
aes(y = deaths, group = 1),
alpha = 0.8,
size = 0.3,
colour = "red"
) +
# За Леталитета
geom_smooth(
aes(y = case_fatality * scaleFactor, group = 1),
se = F,
colour = "blue",
lty = 2,
size = 0.8
) +
geom_vline(aes(xintercept = as.Date('2021-11-09')),size = 0.8, color = "black") +
geom_vline(aes(xintercept = as.Date('2021-10-31')),size = 0.8, color = "red") +
geom_vline(aes(xintercept = as.Date('2022-02-03')),size = 0.8, color = "black") +
geom_vline(aes(xintercept = as.Date('2022-02-10')),size = 0.8, color = "red") +
# За двете оси
scale_y_continuous(name = "Брой (n)",
sec.axis = sec_axis( ~ . / scaleFactor, name = "Леталитет (%)")) +
theme(axis.text.x = element_text(
angle = 90,
vjust = 0.5,
hjust = 1
)) +
# Ръгчетата по х оста
ggthemes::geom_rangeframe(aes(x = admit_day, group = 1)) +
coord_cartesian(clip = "off") +
geom_rug(aes(x = admit_day),
alpha = 0.3,
size = 0.3 ,
sides = "b") +
scale_x_date(date_labels = "%b %y", date_breaks  = "1 month") +
labs(title = "Динамика в броя хоспитализациите, \nсмъртните случаи и леталитета",
x = "")
dat_all %>%
count(admit_day, outocome) %>%
pivot_wider(names_from = outocome, values_from = n) %>%
select(-`NA`) %>%
mutate(total = `За домашно лечение` + `Починал`,
dplyr::across(where(is.numeric), ~ replace(., is.na(.), 0))) %>%
rename(deaths = `Починал`) %>%
select(-`За домашно лечение`) %>%
# хитра функция с групиране по седмици и месеци и нова колона от средните
group_by(yw = paste(year(admit_day), week(admit_day))) %>%
mutate(case_fatality = mean(deaths / mean(total)) * 100) %>%
ungroup()
dat_all %>%
count(admit_day, outocome) %>%
pivot_wider(names_from = outocome, values_from = n) %>%
select(-`NA`) %>%
mutate(total = `За домашно лечение` + `Починал`,
dplyr::across(where(is.numeric), ~ replace(., is.na(.), 0))) %>%
rename(deaths = `Починал`) %>%
select(-`За домашно лечение`) %>%
# хитра функция с групиране по седмици и месеци и нова колона от средните
group_by(yw = paste(year(admit_day), week(admit_day))) %>%
mutate(case_fatality = mean(deaths / mean(total)) * 100) %>%
ungroup() %>% view()
#| label: dinamics
#| fig-cap: "По хоризонтала - времето (седмици), с черна линия - 14- дневен среден брой (moving averages) на хоспитализираните случаи, с червена линия - 14- дневен среден брой (moving averages) на починалите, със синя линия- болничния леталитет на седмична база"
#| warning: false
#| echo: false
#| column: page-right
#| fig-width: 7
#| fig-height: 4
# скалиращ фактор за наличие на две у оси
scaleFactor <- 25 / 76.47059
# подготовка на данни
dat_all %>%
count(admit_day, outocome) %>%
pivot_wider(names_from = outocome, values_from = n) %>%
select(-`NA`) %>%
mutate(total = `За домашно лечение` + `Починал`,
dplyr::across(where(is.numeric), ~ replace(., is.na(.), 0))) %>%
rename(deaths = `Починал`) %>%
select(-`За домашно лечение`) %>%
# хитра функция с групиране по седмици и месеци и нова колона от средните
group_by(yw = paste(year(admit_day), week(admit_day))) %>%
mutate(case_fatality = mean(deaths / mean(total)) * 100) %>%
ungroup() %>%
# Плот
ggplot(aes(x = admit_day, group = 1)) +
# За Хоспитализирани
geom_line(
aes(y = total, group = 1),
alpha = 0.8,
size = 0.6,
lty = 2,
color = "black"
) +
#geom_ma(
#  aes(y = total, group = 1),
#  ma_fun = SMA,
#  n = 14,
#  alpha = 1,
#  size = 0.6,
#  lty = 1,
#  color = "black"
#) +
geom_point(
aes(y = total, group = 1),
alpha = 0.4,
size = 0.2,
color = "black"
) +
# За Починали
geom_line(
aes(y = deaths, group = 1),
alpha = 1,
size = 0.9,
colour = "#FF5733",
lty = 1
) +
#geom_ma(
#  aes(y = deaths, group = 1),
#  ma_fun = SMA,
# n = 14,
# alpha = 1,
# size = 0.6,
# colour = "red",
#  lty = 1
#) +
geom_point(
aes(y = deaths, group = 1),
alpha = 0.8,
size = 0.3,
colour = "red"
) +
# За Леталитета
geom_smooth(
aes(y = case_fatality * scaleFactor, group = 1),
se = F,
colour = "blue",
lty = 2,
size = 0.8
) +
geom_vline(aes(xintercept = as.Date('2021-11-09')),size = 0.8, color = "black") +
geom_vline(aes(xintercept = as.Date('2021-11-15')),size = 0.8, color = "red") +
geom_vline(aes(xintercept = as.Date('2022-02-01')),size = 0.8, color = "black") +
geom_vline(aes(xintercept = as.Date('2022-02-10')),size = 0.8, color = "red") +
# За двете оси
scale_y_continuous(name = "Брой (n)",
sec.axis = sec_axis( ~ . / scaleFactor, name = "Леталитет (%)")) +
theme(axis.text.x = element_text(
angle = 90,
vjust = 0.5,
hjust = 1
)) +
# Ръгчетата по х оста
ggthemes::geom_rangeframe(aes(x = admit_day, group = 1)) +
coord_cartesian(clip = "off") +
geom_rug(aes(x = admit_day),
alpha = 0.3,
size = 0.3 ,
sides = "b") +
scale_x_date(date_labels = "%b %y", date_breaks  = "1 month") +
labs(title = "Динамика в броя хоспитализациите, \nсмъртните случаи и леталитета",
x = "")
#| label: dinamics
#| fig-cap: "По хоризонтала - времето (седмици), с черна линия - 14- дневен среден брой (moving averages) на хоспитализираните случаи, с червена линия - 14- дневен среден брой (moving averages) на починалите, със синя линия- болничния леталитет на седмична база"
#| warning: false
#| echo: false
#| column: page-right
#| fig-width: 7
#| fig-height: 4
# скалиращ фактор за наличие на две у оси
scaleFactor <- 25 / 76.47059
# подготовка на данни
dat_all %>%
count(admit_day, outocome) %>%
pivot_wider(names_from = outocome, values_from = n) %>%
select(-`NA`) %>%
mutate(total = `За домашно лечение` + `Починал`,
dplyr::across(where(is.numeric), ~ replace(., is.na(.), 0))) %>%
rename(deaths = `Починал`) %>%
select(-`За домашно лечение`) %>%
# хитра функция с групиране по седмици и месеци и нова колона от средните
group_by(yw = paste(year(admit_day), week(admit_day))) %>%
mutate(case_fatality = mean(deaths / mean(total)) * 100) %>%
ungroup() %>%
# Плот
ggplot(aes(x = admit_day, group = 1)) +
# За Хоспитализирани
geom_line(
aes(y = total, group = 1),
alpha = 0.8,
size = 0.6,
lty = 2,
color = "black"
) +
#geom_ma(
#  aes(y = total, group = 1),
#  ma_fun = SMA,
#  n = 14,
#  alpha = 1,
#  size = 0.6,
#  lty = 1,
#  color = "black"
#) +
geom_point(
aes(y = total, group = 1),
alpha = 0.4,
size = 0.2,
color = "black"
) +
# За Починали
geom_line(
aes(y = deaths, group = 1),
alpha = 1,
size = 0.9,
colour = "#FF5733",
lty = 1
) +
#geom_ma(
#  aes(y = deaths, group = 1),
#  ma_fun = SMA,
# n = 14,
# alpha = 1,
# size = 0.6,
# colour = "red",
#  lty = 1
#) +
geom_point(
aes(y = deaths, group = 1),
alpha = 0.8,
size = 0.3,
colour = "red"
) +
# За Леталитета
geom_smooth(
aes(y = case_fatality * scaleFactor, group = 1),
se = F,
colour = "blue",
lty = 2,
size = 0.8
) +
geom_vline(aes(xintercept = as.Date('2021-10-25')),size = 0.8, color = "black") +
geom_vline(aes(xintercept = as.Date('2021-10-31')),size = 0.8, color = "red") +
geom_vline(aes(xintercept = as.Date('2022-02-01')),size = 0.8, color = "black") +
geom_vline(aes(xintercept = as.Date('2022-02-10')),size = 0.8, color = "red") +
# За двете оси
scale_y_continuous(name = "Брой (n)",
sec.axis = sec_axis( ~ . / scaleFactor, name = "Леталитет (%)")) +
theme(axis.text.x = element_text(
angle = 90,
vjust = 0.5,
hjust = 1
)) +
# Ръгчетата по х оста
ggthemes::geom_rangeframe(aes(x = admit_day, group = 1)) +
coord_cartesian(clip = "off") +
geom_rug(aes(x = admit_day),
alpha = 0.3,
size = 0.3 ,
sides = "b") +
scale_x_date(date_labels = "%b %y", date_breaks  = "1 month") +
labs(title = "Динамика в броя хоспитализациите, \nсмъртните случаи и леталитета",
x = "")
